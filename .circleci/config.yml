version: 2.1

jobs:
  build:
    working_directory: ~/code
    docker:
      - image: 'circleci/android:api-29'
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#       - run:
#           name: Accept Android SDK licences
#           command: sdkmanager --update && yes | sdkmanager --licenses
      - run:
          name: Build debug APK and debug instrumented test APK
          command: |
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apk
      - run:
          name: Run unit tests
          command: ./gradlew testDebugUnitTest
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --app app/build/outputs/apk/debug/app-debug.apk \
              --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
              --device model=Pixel2,version=27 \
              --environment-variables coverage=true,coverageFile=/sdcard/coverage.ec \
              --directories-to-pull=/sdcard \
              --results-dir=${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
      - run:
          name: Download instrumented test results from Firebase Test Lab
          command: |
            sudo pip install -U crcmod
            sudo gsutil -m cp -r -U gs://test-lab-durvnjx1ft5f2-yfcyy0uzs56f6/${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}/Pixel2-27-en-portrait/artifacts/sdcard/coverage.ec app/build/outputs/code_coverage/debugAndroidTest/connected/coverage.ec
            sudo gsutil -m cp -r -U gs://test-lab-durvnjx1ft5f2-yfcyy0uzs56f6/${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}/Pixel2-27-en-portrait/test_result_1.xml app/build/test-results/testDebugAndroidTest/test_result_1.xml
      - run:
          name: Lint
          command: ./gradlew lint
      - run:
          name: Generate JaCoCo report
          command: ./gradlew jacocoTestReport
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      - run:
          name: Analyze on SonarCloud
          command: ./gradlew sonarqube

workflows:
  main:
    jobs:
      - build:
          context: SonarCloud
